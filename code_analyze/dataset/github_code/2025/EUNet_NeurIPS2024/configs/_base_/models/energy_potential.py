model = dict(
    type='EUNetSimulator',
    train_cfg=dict(warmup=100),
    backbone=dict(
        type='EnergyPotential',
        pre_norm=True,
        dt=1/30,
        attr_dim=5,
        state_dim=3,
        position_dim=3,
        num_force_layers=4,
        embed_dims=128,
        dropout=0.0,
        eps=1e-7,
        act_cfg=dict(type='SiLU', inplace=True),
        norm_cfg=dict(type='LN'),
        num_fcs=3,
        dissipate_sigma=0.5,
        ),
    decode_head=dict(
        type='PotentialDecoder',
        out_channels=1, # 1 for scalar
        in_channels=128,
        position_dim=3,
        dt=1/30,
        init_cfg=None,
        eps=1e-7,
        act_cfg=dict(type='SiLU', inplace=True),
        norm_cfg=dict(type='LN'),
        norm_acc_steps=10000,
        dissipate_sigma=0.5,
        loss_decode=[
            dict(type='MSELoss',
                 reduction='sum',
                 loss_weight=1.0,
                 loss_name='loss_elenergy'),
            dict(type='CmpLoss',
                 reduction='sum',
                 loss_weight=1e6,
                 min_diff=0.0,
                 scalar=1.0,
                 loss_name='loss_elcmp'),
            ],
        accuracy=[
            dict(type='MSEAccuracy', reduction='sum', acc_name='acc_elenergy'),
            dict(type='CompareAccuracy', reduction='mean', acc_name='acc_elcmp'),
            ],
        ),
)