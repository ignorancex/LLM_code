import argparse
import os
import shutil
import subprocess
import pycolmap
from typing import List

def colmap_batch(
    input_path : str,
    output_path : str,
    frame_names : List[str]
):
    try:
        os.mkdir(output_path)
    except:
        pass
    # For each frame.
    ambiguous_recon_frames = []
    for frame_folder_name in sorted(os.listdir(input_path)):
        frame_name = frame_folder_name[5:]
        if len(frame_names) > 0 and frame_name not in frame_names:
            continue
        try:
            os.mkdir(os.path.join(output_path, frame_folder_name))
        except:
            pass
        try:
            os.mkdir(os.path.join(output_path, frame_folder_name, "sparse"))
        except:
            pass
        print("============================= Frame {} =============================".format(frame_name))
        # Feature extractor.
        command = \
                """
                    colmap feature_extractor \\
                    --database_path {} \\
                    --image_path {} \\
                    --ImageReader.camera_model PINHOLE \\
                    --ImageReader.single_camera_per_image 1
                """.format(
                    os.path.join(output_path, frame_folder_name, "database.db"),
                    os.path.join(input_path, frame_folder_name)
                )
        subprocess.run(command, shell=True, executable="/bin/bash")
        # Exhaustive matcher.
        command = \
                """
                    colmap exhaustive_matcher \\
                    --database_path {}
                """.format(
                    os.path.join(output_path, frame_folder_name, "database.db")
                )
        subprocess.run(command, shell=True, executable="/bin/bash")
        # Mapper
        command = \
                """
                    colmap mapper \\
                    --database_path {} \\
                    --image_path {} \\
                    --output_path {} \\
	                --Mapper.ba_refine_focal_length 1 \\
	                --Mapper.ba_refine_principal_point 1 \\
	                --Mapper.ba_refine_extra_params 0
                """.format(
                    os.path.join(output_path, frame_folder_name, "database.db"),
                    os.path.join(input_path, frame_folder_name),
                    os.path.join(output_path, frame_folder_name, "sparse")
                )
        subprocess.run(command, shell=True, executable="/bin/bash")
        # Check reconstruction results.
        recon_folder_names = os.listdir(os.path.join(output_path, frame_folder_name, "sparse"))
        if len(recon_folder_names) >= 2:
            ambiguous_recon_frames.append(frame_name)
        # Convert binary to text files.
        for recon_folder_name in recon_folder_names:
            recon = pycolmap.Reconstruction()
            recon.read_binary(os.path.join(output_path, frame_folder_name, "sparse", recon_folder_name))
            recon.write_text(os.path.join(output_path, frame_folder_name, "sparse", recon_folder_name))
    # Done.
    print("Ambiguous reconstruction frames:")
    print(" ".join(ambiguous_recon_frames))
    print("Please check the reconstruction results of these frames manually.")
    return
        



if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog="colmap_batch.py",
        description="""
                        Run COLMAP on the images generated by "gather_images.py".
                        The result of each frame will be placed into a subfolder called 'frame[frame_id]' in the output folder.
                    """,
        allow_abbrev=True
    )
    parser.add_argument("input", help="Path to multiface dataset.")
    parser.add_argument("output", help="Path to output result folder.")
    parser.add_argument("--frame_names", type=str, nargs='*', help="The list of frame names to be processed. If not specified, all frames will be processed.")
    args = parser.parse_args()
    input_path = args.input
    output_path = args.output
    frame_names = args.frame_names if args.frame_names is not None else []
    
    colmap_batch(input_path, output_path, frame_names)