import gymnasium as gym
from envs.mo_fruit_tree.mo_fruit_tree_randomized import MOFruitTreeDR

class MOFruitTreeSubtle(MOFruitTreeDR):
    def __init__(self, **kwargs):
        """
        Fruit tree only has rewards between 3 and 6.
        Agent has to learn to differentiate subtle reward variations.
        """
        depth = 5
        fruit_tree = [
            [3.59839091, 4.86576016, 5.4669248, 3.47444419, 3.15949976, 3.62984274],
            [5.29188496, 5.31376309, 4.21033698, 3.32309717, 5.08508467, 3.1457795],
            [3.81345486, 5.2122932, 3.35607531, 3.41204293, 5.38372035, 5.01817237],
            [3.99903013, 4.90736753, 4.49798768, 5.51636086, 5.62417731, 4.6100432],
            [5.91591706, 3.95943507, 5.49035481, 3.81571939, 3.14075394, 5.86083211],
            [4.24535972, 3.78362378, 3.17830067, 4.98105592, 5.83749019, 4.05793755],
            [5.88046189, 4.72564729, 4.17900659, 5.93239418, 3.29481794, 3.32515528],
            [3.40538995, 5.83222136, 5.98185589, 3.50293993, 5.71774139, 4.72509813],
            [4.36869899, 5.43148628, 4.41286816, 4.7071296, 4.49601946, 5.80363803],
            [4.17490338, 5.19331649, 5.71096788, 3.57360574, 5.01473009, 4.84243211],
            [3.65980692, 4.91006302, 3.95879623, 3.04153288, 3.70689827, 4.82127747],
            [4.48925856, 3.65156256, 3.41636386, 3.07262322, 3.97490832, 5.4905711],
            [4.46679595, 5.61681817, 3.37178824, 5.33124895, 5.5315192, 3.22849579],
            [5.19224347, 4.1788492, 3.83035236, 3.02485425, 5.22647547, 5.98317466],
            [4.4620999, 3.45495044, 5.44603917, 5.37625237, 4.25816299, 4.39301052],
            [5.20728144, 5.16312266, 4.66443207, 3.46087062, 3.67072446, 3.34784965],
            [4.90705244, 5.05492041, 5.15016044, 5.83164956, 3.17269887, 3.94710857],
            [4.10229146, 3.80147488, 3.30006098, 5.15062573, 4.46571028, 4.93746932],
            [5.58985363, 4.83913583, 5.96734677, 4.18141753, 5.17889268, 3.37862163],
            [4.91798519, 5.56045675, 5.30007882, 5.30170188, 4.64591505, 5.45231902],
            [3.60979055, 3.51333475, 3.47657189, 5.44375039, 4.3321574, 5.92683299],
            [3.14730035, 5.03987352, 5.92620697, 4.71494917, 4.33758297, 3.8873091],
            [3.0704685, 4.60752427, 4.10126557, 3.49130449, 4.63685798, 4.14241256],
            [3.69151075, 4.88598871, 4.00450964, 3.2306566, 3.08494961, 4.80519048],
            [5.12962265, 4.0865893, 5.76933858, 4.49553775, 3.30686544, 3.73045681],
            [5.31679126, 3.21777172, 4.37915975, 4.4663138, 3.93621779, 5.72590237],
            [4.6652267, 5.09194011, 3.11884602, 5.3099282, 4.61099755, 3.4877996],
            [5.67798957, 3.59638155, 5.292497, 4.58623878, 4.33960502, 5.24389391],
            [4.8459113, 3.92150203, 5.68777841, 3.69560411, 5.41118248, 3.59748608],
            [3.24302161, 5.79448265, 3.18925506, 4.75396909, 4.48198991, 3.90905573],
            [5.8529871, 4.38020532, 3.54811992, 3.77514428, 5.61879331, 3.24011542],
            [5.87183084, 4.07218013, 3.61281223, 3.16581482, 3.33686308, 4.9542935]
        ]

        super().__init__(depth=depth, fruit_tree=fruit_tree, **kwargs)

class MOFruitTreeSparse(MOFruitTreeDR):
    def __init__(self, **kwargs):
        """
        Fruit tree has sparse rewards. Most leaf nodes have near zero rewards.
        Agent must explore effectively to discover and prioritize the few rewarding paths.
        """
        depth = 5
        fruit_tree = [
            [0.21378, 0.75730, 0.84724, 0.48717, 0.74511, 0.88390],
            [0.71567, 0.82821, 0.25141, 0.13645, 0.80123, 0.96857],
            [0.93682, 0.87502, 0.95282, 5.84753, 8.76033, 0.71452],
            [9.40401, 0.45499, 0.23171, 0.21099, 0.24273, 0.87154],
            [0.47996, 0.41753, 0.10029, 0.09469, 0.45719, 0.94070],
            [0.57240, 0.21620, 0.47248, 0.67862, 0.72753, 0.63600],
            [0.88998, 0.43169, 0.19755, 0.06099, 0.41276, 0.46749],
            [0.94602, 0.76385, 0.09198, 0.71771, 0.65426, 0.53354],
            [0.77141, 7.20601, 6.48372, 0.09069, 0.77455, 5.65049],
            [0.56625, 0.63031, 0.09956, 0.44638, 0.17495, 0.81710],
            [0.93409, 0.60280, 8.68274, 0.18453, 0.64306, 8.50335],
            [0.15302, 0.27555, 0.74878, 9.00744, 0.58281, 0.79778],
            [0.41360, 0.37433, 0.68443, 0.79438, 0.08301, 0.46393],
            [0.74433, 0.16936, 0.39747, 0.80110, 0.37208, 0.71594],
            [5.94173, 0.62784, 9.90596, 0.76585, 0.91281, 7.24180],
            [0.01792, 0.64037, 0.32030, 0.64925, 0.31241, 0.57136],
            [6.58759, 6.91417, 0.13691, 6.43813, 0.76674, 6.41329],
            [0.90550, 0.08281, 0.43735, 0.79565, 0.28792, 0.81827],
            [0.23323, 0.50049, 7.62136, 0.31730, 7.27292, 0.04903],
            [0.88475, 0.14013, 0.93898, 0.10131, 0.19376, 0.03488],
            [0.11831, 0.92173, 0.44671, 0.41040, 0.67549, 0.68447],
            [0.83836, 9.30007, 0.14497, 0.79759, 5.01958, 0.22960],
            [0.85005, 0.96191, 0.14540, 0.63533, 0.59466, 0.29863],
            [0.53895, 0.24699, 0.76872, 0.55285, 0.88652, 0.89698],
            [0.81317, 0.54132, 0.31193, 0.66315, 0.66504, 0.72593],
            [8.49463, 0.02854, 0.43571, 0.26109, 0.40261, 8.77886],
            [0.14265, 0.91743, 0.47228, 0.28684, 0.60028, 0.11661],
            [0.95776, 9.36733, 0.73157, 0.37774, 0.52824, 9.34741],
            [0.50790, 0.81403, 0.94123, 0.22684, 0.50755, 0.65777],
            [0.29818, 0.33032, 0.95287, 0.57128, 0.69291, 0.48601],
            [5.62762, 0.50563, 6.43126, 0.19104, 9.73782, 0.14112],
            [0.84710, 0.85028, 0.42950, 0.95449, 0.40671, 0.93396]
        ]

        super().__init__(depth=depth, fruit_tree=fruit_tree, **kwargs)

class MOFruitTreeLattice(MOFruitTreeDR):
    def __init__(self, **kwargs):
        """
        Rewards are distributed in a lattice pattern.
        """
        depth = 5
        fruit_tree = [
            [4.21378, 0.0, 0.0, 0.0, 0.0, 9.88390],
            [0.0, 5.82821, 0.0, 0.0, 8.80123, 0.0],
            [0.0, 0.0, 6.95282, 7.84753, 0.0, 0.0],
            [0.0, 0.0, 6.23171, 7.21099, 0.0, 0.0],
            [0.0, 5.41753, 0.0, 0.0, 9.45719, 0.0],
            [4.57240, 0.0, 0.0, 0.0, 0.0, 9.63600],
            [0.0, 5.43169, 0.0, 0.0, 8.41276, 0.0],
            [0.0, 0.0, 6.09198, 7.71771, 0.0, 0.0],
            [0.0, 7.0, 6.48372, 7.09069, 0.0, 5.0],
            [0.0, 5.63031, 8.09956, 0.0, 0.0, 0.0],
            [4.93409, 9.60280, 0.0, 0.0, 0.0, 8.0],
            [0.0, 8.27555, 5.74878, 0.0, 0.0, 0.0],
            [0.0, 0.0, 5.68443, 5.79438, 0.0, 0.0],
            [0.0, 0.0, 0.0, 6.80110, 6.37208, 0.0],
            [0.0, 0.0, 0.0, 0.0, 7.91281, 8.24180],
            [0.0, 0.0, 0.0, 8.64925, 9.31241, 0.0],
            [0.0, 0.0, 7.13691, 6.43813, 0.0, 6.0],
            [0.0, 8.08281, 5.43735, 0.0, 0.0, 0.0],
            [5.23323, 9.50049, 0.0, 0.0, 0.0, 0.0],
            [6.88475, 6.14013, 6.93898, 0.0, 0.0, 0.0],
            [0.0, 5.92173, 5.44671, 7.41040, 0.0, 0.0],
            [0.0, 0.0, 6.14497, 7.79759, 8.01958, 0.0],
            [0.0, 0.0, 0.0, 8.63533, 5.59466, 4.29863],
            [5.53895, 0.0, 5.76872, 0.0, 5.88652, 0.0],
            [0.0, 6.54132, 0.0, 6.66315, 0.0, 6.72593],
            [8.49463, 0.0, 5.43571, 0.0, 9.40261, 0.0],
            [9.14265, 0.0, 7.47228, 0.0, 0.0, 0.0],
            [0.0, 5.36733, 0.0, 9.37774, 0.0, 0.0],
            [0.0, 0.0, 6.94123, 0.0, 8.50755, 0.0],
            [0.0, 0.0, 0.0, 8.57128, 0.0, 8.48601],
            [5.62762, 5.50563, 0.0, 5.19104, 5.73782, 0.0],
            [0.0, 5.85028, 5.42950, 0.0, 5.40671, 5.93396]
        ]

        super().__init__(depth=depth, fruit_tree=fruit_tree, **kwargs)

class MOFruitTreeRandom1(MOFruitTreeDR):
    def __init__(self, **kwargs):
        """
        Rewards are randomly generated.
        """
        depth = 5
        fruit_tree = [
            [5.40821, 7.47315, 1.48169, 4.92808, 3.00411, 4.03061],
            [9.26893, 3.84047, 5.75762, 3.28839, 4.25186, 7.27045],
            [1.00957, 5.84198, 8.52026, 6.11887, 4.68505, 1.70359],
            [2.84168, 6.14756, 8.10808, 3.23774, 0.08969, 1.42691],
            [1.04218, 5.93710, 4.53147, 2.65161, 2.01879, 8.67532],
            [7.52866, 8.07280, 5.18369, 3.96634, 4.46244, 5.72924],
            [0.99735, 0.84272, 8.08097, 2.05042, 3.04970, 7.36427],
            [5.23822, 0.86964, 3.06461, 5.13881, 9.14359, 7.30706],
            [3.28273, 9.42959, 3.54826, 8.37836, 3.58005, 0.27167],
            [9.45024, 0.63157, 2.38476, 2.09349, 6.50149, 1.51827],
            [6.88658, 8.96451, 0.32824, 6.05386, 7.33055, 7.98148],
            [1.10932, 1.05642, 2.69520, 9.84329, 8.40036, 3.18790],
            [2.71360, 1.05383, 4.80158, 7.20119, 3.89613, 1.29480],
            [6.80644, 9.11412, 2.91900, 7.33807, 5.89350, 6.81761],
            [3.14399, 6.07769, 6.34460, 1.98818, 2.42521, 9.33863],
            [7.75746, 3.23111, 5.59598, 3.55358, 6.52701, 0.24601],
            [5.61570, 0.55889, 7.21940, 7.19212, 7.51089, 7.54942],
            [9.93328, 1.25162, 9.20337, 4.57653, 4.39274, 3.44974],
            [6.07631, 4.46693, 5.77559, 4.51212, 9.10919, 9.36744],
            [3.31014, 4.08300, 6.99982, 8.90664, 6.46078, 7.95424],
            [9.24044, 2.76545, 4.78906, 7.10706, 0.02923, 1.28903],
            [3.17462, 6.28212, 4.63694, 4.38297, 3.25057, 1.22525],
            [3.53663, 4.77750, 7.54832, 8.19881, 7.37849, 8.35744],
            [6.22536, 0.81317, 4.11561, 9.15227, 0.08315, 8.32294],
            [4.52420, 7.33263, 8.02436, 8.65048, 9.14878, 5.57353],
            [0.00635, 2.86276, 6.97173, 0.16999, 0.69075, 3.65259],
            [3.65490, 0.74966, 3.34650, 4.22769, 6.99269, 2.51531],
            [5.20013, 1.93494, 8.12117, 3.68692, 6.99230, 3.95707],
            [9.07304, 4.90788, 3.69503, 4.13196, 8.93662, 6.57774],
            [0.50703, 4.04185, 2.83639, 1.64953, 8.31151, 0.66688],
            [8.16826, 6.99814, 7.77426, 6.78183, 4.80129, 9.75531],
            [7.98408, 8.14561, 3.90858, 3.02466, 2.62537, 8.57118]
        ]

        super().__init__(depth=depth, fruit_tree=fruit_tree, **kwargs)

class MOFruitTreeRandom2(MOFruitTreeDR):
    def __init__(self, **kwargs):
        """
        Rewards are randomly generated.
        """
        depth = 5
        fruit_tree = [
            [4.73314, 1.51772, 0.32790, 4.71688, 3.54041, 3.05865],
            [1.18180, 2.44446, 2.63800, 7.81919, 3.28209, 9.66996],
            [2.96003, 1.93641, 5.93926, 8.19229, 4.92865, 5.19359],
            [0.78037, 9.01555, 7.26284, 5.73944, 6.42518, 6.66821],
            [8.00007, 5.87599, 1.72456, 8.45227, 3.03617, 7.38416],
            [4.29622, 1.72003, 0.85695, 0.37367, 0.96833, 5.82636],
            [1.89777, 7.50174, 5.98060, 6.41621, 8.70884, 7.99276],
            [4.68836, 3.19194, 8.77412, 4.67496, 9.93493, 2.28647],
            [0.01519, 2.70014, 2.80657, 7.40039, 6.93502, 4.18679],
            [0.10621, 2.58101, 4.49260, 6.39731, 2.49532, 9.79391],
            [8.82388, 6.15294, 6.02803, 3.97181, 2.64100, 1.91969],
            [4.55181, 2.74330, 5.91382, 1.24770, 0.31796, 7.95411],
            [8.29110, 5.48151, 2.94915, 9.78842, 8.41694, 0.88642],
            [5.30755, 2.31187, 7.61524, 6.77173, 9.15410, 3.36410],
            [9.80926, 7.21391, 9.42170, 4.65130, 3.70654, 9.97580],
            [2.77933, 5.07370, 4.37521, 1.94714, 6.21234, 5.31764],
            [9.96484, 8.23389, 5.51033, 2.35201, 3.97175, 0.99703],
            [4.59201, 5.28860, 5.02754, 2.93672, 8.63767, 7.87120],
            [7.93346, 3.97571, 1.43142, 7.02924, 8.33465, 8.14199],
            [6.16379, 8.53181, 8.29367, 2.88105, 7.30075, 0.04371],
            [7.95127, 5.89059, 6.39363, 7.95644, 2.95003, 8.95967],
            [3.59600, 2.60205, 7.66893, 1.45734, 8.37292, 5.35127],
            [3.51617, 8.73175, 6.26163, 3.29005, 1.10193, 5.14674],
            [7.39841, 5.76534, 6.17025, 2.76714, 8.64633, 3.47481],
            [2.20869, 4.59530, 0.69194, 4.92526, 7.28894, 8.36769],
            [8.77902, 5.25937, 1.53806, 1.63874, 9.53275, 8.47180],
            [4.49723, 0.78103, 5.73030, 6.00930, 8.39502, 5.90593],
            [4.54901, 2.37753, 2.83664, 1.65280, 5.43186, 2.18660],
            [6.29830, 6.75669, 2.18230, 4.25698, 9.26581, 8.10179],
            [8.74115, 9.11707, 0.63421, 0.82891, 7.09671, 4.16121],
            [7.22474, 8.90899, 2.16761, 9.60537, 6.89686, 8.52207],
            [3.47640, 4.48022, 5.40079, 3.29545, 8.38014, 7.30963]
        ]

        super().__init__(depth=depth, fruit_tree=fruit_tree, **kwargs)
             
def register_fruit_tree():
    try:
        gym.envs.register(
            id="MOFruitTreeDR-v0",
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_randomized:MOFruitTreeDR",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")

    try:
        gym.envs.register(
            id="MOFruitTreeDefault-v0", # copy of the dr environment but renamed for clarity
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_randomized:MOFruitTreeDR",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")

    try:
        gym.envs.register(
            id="MOFruitTreeSubtle-v0",
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_test_envs:MOFruitTreeSubtle",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")

    try:
        gym.envs.register(
            id="MOFruitTreeSparse-v0",
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_test_envs:MOFruitTreeSparse",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")

    try:
        gym.envs.register(
            id="MOFruitTreeLattice-v0",
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_test_envs:MOFruitTreeLattice",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")

    try:
        gym.envs.register(
            id="MOFruitTreeRandom1-v0",
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_test_envs:MOFruitTreeRandom1",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")
    
    try:
        gym.envs.register(
            id="MOFruitTreeRandom2-v0",
            entry_point="envs.mo_fruit_tree.mo_fruit_tree_test_envs:MOFruitTreeRandom2",
        )
    except Exception as e:
        print(f"Unexpected error: {e}, {type(e)}")